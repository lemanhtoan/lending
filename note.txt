A. Email template
Các email gửi cho khách đều có CC Admin

+ Khoản vay được khởi tạo
Content:
Khoản vay của bạn đã được khởi tạo vui lòng truy cập liên kết sau để thế chấp tài sản
Link abc:...
+ Khoản vay đã thế chấp tài sản
Content:
Bạn đã thế chấp xong tài sản Chi tiết khoản vay xem liên kết sau
Link abc
+ Khoản vay có hiệu lực
Conntent:
Khoản vay của bạn đã được đầu tư.

Hiển thị thông tin chi tiết khoản vay

+ Khoản vay sắp đến hạn trong vòng xxx(7 ngày)
Content:
Khoản vay của bạn sắp đến hạn vui lòng thu xếp vốn để thanh toán khoản vay

Hiển thị thông tin chi tiết khoản vay

+ Khoản vay được trả nợ
Content:

Bạn đã thanh toán khoản vay abc số tiền là...

Hiển thị thông tin chi tiết khoản vay

+ Khoản vay quá hạn (dưới 15 ngày)

Khoản vay của bạn đã quá hạn xxx ngày. Nếu không thanh toán sau ngày xxx tài sản thế chấp sẽ chuyển cho người cho vay

Chi tiết khoản vay

+ Người đi vay rút tài sản đang chờ duyệt

10 BTC của bạn đang được Admin duyệt

Send 10 BTC to address BTC (của khách hàng rút tiền)

+ Người đi va rút tài sản thành công

10 BTC của bạn đã được Admin duyệt

Send 10 BTC to address BTC (của khách hàng rút tiền)

+ Khoản vay quá hạn 15 ngày

Bạn đã quá hạn tài sản thế chấp của bạn đã được chuyển cho nhà đầu tư (cho vay)

+ Chuyển tài sản cho nhà đầu tư

Tài sản thếp chấp cho khoản vay đã quá hạn và tài sản được chuyển cho nhà đầu tư

Send 10 BTC to address BTC (của nhà đầu tư)

Chi tiết khoản vay

===================================
B. Dia chi nhan tien
Bitcoin address: 1FhVnQeViHFd54rbRWuEskqqfY4CDJ4WPd
Etherium address: 0xc003724eb51c809b38340f91d16716ab67a0772b
Litecoin address: 0xc003724eb51c809b38340f91d16716ab67a0772b

====================================
C. Process


Administrator : email = admin@gmail.com, password = admin
Redactor : email = redac@la.fr, password = redac
User : email = walker@la.fr, password = walker
User : email = slacker@la.fr, password = slacker

https://github.com/bestmomo/laravel5-example

1. Register + verified email
Nếu google và fb: sau khi login thì sẽ điền email để verified accout và update thông tin + password
=> active account neu dung fb hoac google

2. Borrower tạo khoản vay.
Ngày giải ngân: tinh khi nha dau tu chuyen tien => update lai
Ngày đáo hạn: thoi gian ngay giai ngan + so thang vay
=>đã thế chấp tài sản => Trạng thái là: Khởi tạo => có thể cho nhà đầu tư nhìn thấy

3. Borrower chuyển thế chấp (PENDING...)
Người dùng thế chấp trên https://jaxx.io/ => Hệ thống phải xử lý và kết nối với tài khoản trên hệ thống website
hoac co the luu tren: blockchain.info, bitcoin.com, myetherwallet.com

- Mỗi thế chấp là 1 bản ghi tài sản đảm bảo của người vay.
- Có thể + và - với tài khoản thế chấp cho các khoản vay khác nhau

=> Trạng thái là: Đã thế chấp tài sản, chờ nhà đâu tư (***)

4. Investee vào website và tìm khoản vay để đầu tư
a. Tìm khoản vay và đầu tư
Danh sách người vay hiển thị thi thỏa mãn (***).

=> Lựa chọn 1 người cần vay => cho vay và Invest
=> Trạng thái là: Chờ nhà đầu tư chuyển tiền => chuyen tien dau tu ngay tai thoi diem do (cau hinh thoi gian toi da la bao nhieu phut phai chuyen tien - neu khong giao dich se bi huy)

b. Nhà đầu tư sẽ chuyển tiền vào tài khoản của hệ thống.

=> UPDATE theo giai phap moi.......

5. Trường hợp chưa có nhà đầu tư: Thủ thuật cho website có nhiều người vào vay
Nhà đầu tư đặc biệt: Admin cầu hình chọn 1 người duy nhất làm đầu tư đặc biệt - tu danh sach nguoi vay va dau tu cho cac khoan vay.

FB:
606771139713362
b0b4b266b1bb1aa8a42db046002da34b

GG:
oH0dL8ZvoPOXZsqJV0_TvUzK
974603231392-q9akc2e6j6liuiv7j33np56ls31t6phh.apps.googleusercontent.com

https://blog.damirmiladinov.com/laravel/laravel-5.2-socialite-facebook-login.html#.WdIAnmjyiUk
https://blog.damirmiladinov.com/laravel/laravel-5.2-socialite-google-login.html#.WdIAnmjyiUk

=> cacert.pem to php ini
=> Error google login: This means you have not configured Google APIs correctly.(Library > Google+ API > Enable) + Other config active google +.


GET current price: https://files.coinmarketcap.com/generated/search/quick_search.json
https://coinmarketcap.com/widget/
https://api.coinmarketcap.com/v1/ticker/ethereum/?ref=widget&convert=USD


Lay thong tin vcb: https://exchangeno1.com/check.php?xPayment=VCB&xAccount=0451000295304


=====================NDT chuyển tiền=========================
contract của token mình dùng 0xF7b0962b9b00D42EeDb1005316875f1312785e84: CCT
1. cách tạo token riêng cho web mình ( dũng cung cấp )
2. lấy tỷ giá 5phut 1 lần từ https://coinmarketcap.com  https://coinmarketcap.com/currencies/salt/#charts
3. tài khoản người vay cần có 1 địa chỉ token để nhận tiền (mình cung cấp hay khách tự điền - nếu tự điền thì nó làm sao để kết nối token bên mình) - không thể edit (admin có thể edit)
4. nhà đầu tư tự chuyển token về cho người vay và lấy được haskkey => sau đó điền vào form của mình để check
5. check info sau khi thask submit: https://api.ethplorer.io/getTxInfo/0xc3c99b13eac2338993020cad8c5991cfe9baa9e4e8319f3c50ac4c4a597e24c5?apiKey=freekey

"success":true: Giao dịch chuyển thành công
Contract tạo token/coin "address":"0x78971f0f20e7aac8adf286dba7d4487f96d36ab0 =>Mỗi token sẽ được tạo từ 1 mã contact, Dũng sẽ gửi em mã này
Số lượng coin "value":"100000000000" => Giá trị là 1000 token: Căn cứ "decimals":"8"
Mã token "symbol":"EFSS
"to":"0x9a64d9493de1d1c1377e415460ccf09fcd7ff532"
=> tất cả ok: giao dịch thành công!

6. chuyển thiếu: => thông báo người vay hoàn trả tiền. => mình làm sao biết đã hoàn trả???
Cập nhật giá trị khoản vay tương ứng với số lượng token: 300/500*1000 => không cần vì đã thông bao hoàn trả
=> khi nhà đầu tư submit chọn khoản vay => tính giá trị token và lưu vào db khi ndt quyết định đầu tư (confirm => lưu lại)
sau đó khi nhà đầu tư confim đã chuyển bằng haskcode => submit check giá trị từ api value trả về và giá trị db lưu kia: nếu = thì ok, thiếu thì thông báo tới người vay hoàn trả

----------
dùng Ethereum token chuẩn ERC20

Chúng ta sẽ tạo token dùng chung cho website coincashloan.com
Ví dụ token của 1 website khác
https://etherscan.io/address/0x4086f6c05207d0747499fcf41328d736a18c564b

Thí dụ: Nhà đầu tư muốn cho vay 1000 USD sẽ mua token trên exchanger (sàn giao dịch). Lúc đó chúng ta sẽ lấy giá trên https://coinmarketcap.com qui đổi 1000 USD này sẽ được bao nhiêu token tương ứng (Giả sử tại thời điểm chuyển tiền thì giá trị token này là 1 USD thì nhà đầu tư chuyển 1000 token cho người đi vay)

Đến thời hạn trả nợ thì người đi vay sẽ làm tương ứng nhưng theo chiều ngược lại

Để làm được điều này nhà đầu tư và đi vay phải có ví Ethereum để chứa token (ví này có thể tạo ở myetherwallet.com hay https://metamask.io/)

Do ban đầu token chưa có niêm yết trên sàn nên chúng ta sẽ cấu hình 1 giá trị hợp lý thí dụ 0.5 USD để quy đổi token sau khi được niêm yết lên sàn thì chúng ta lấy tỷ giá từ sàn niêm yết

Do giá token sẽ thay đổi liên tục nên form chuyển tiền của nhà đâu tư sẽ cập nhật giá token 5 phút/lần để giá cả được hợp lý. Khi nhà đầu tư chuyển token (tương đương tiền vay) sang cho người đi vay và ngược lại chúng ta có thể check tại website https://ethplorer.io/address/0x9b289436de13a4c6705b0875556f067dfb9e0fbb#pageSize=100 và dùng API của họ để check https://github.com/EverexIO/Ethplorer/wiki/Ethplorer-API


ALTER TABLE `users` ADD `cclAddress` VARCHAR(255) NULL;
INSERT INTO `settings` (`id`, `name`, `content`, `created_at`, `updated_at`) VALUES (NULL, 'ccl', '0.5', NULL, NULL);


